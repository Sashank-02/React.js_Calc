{"version":3,"sources":["components/Button.js","components/Input.js","components/Clear.js","App.js","reportWebVitals.js","index.js"],"names":["Button","isOperator","val","isNaN","className","this","props","children","onClick","handleClick","Component","Input","Clear","handleClear","App","addToInput","setState","input","state","addDecimal","indexOf","clearInput","addZeroToInput","add","previousNum","operator","subt","multiply","divide","equal","currentNum","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dd7ce06.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\n\r\nclass Button extends Component {\r\n isOperator = val => {\r\n     return !isNaN(val)|| val=== \".\"||val===\"=\" ;\r\n }; \r\n \r\n  render () {\r\n    return(\r\n    <div \r\n    className={`button ${this.isOperator(this.props.children)?\"\":\"operator\"}`}\r\n    onClick={()=>this.props.handleClick\r\n    (this.props.children)}\r\n    >\r\n    {this.props.children}\r\n    </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default Button;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './Input.css';\r\n\r\n\r\nclass Input extends Component { \r\n\r\n \r\n  render () {\r\n    return(\r\n        <div className=\"input\">\r\n          {this.props.children}  \r\n\r\n        </div>\r\n  \r\n  );\r\n }\r\n}\r\n\r\nexport default Input;\r\n\r\n\r\n\r\n \r\n","import React, { Component } from 'react';\r\nimport './Clear.css';\r\n\r\n\r\nclass Clear extends Component { \r\n\r\n \r\n  render () {\r\n    return(\r\n        <div className=\"clear-button\"\r\n        onClick={()=>this.props.handleClear()}\r\n        >\r\n\r\n          {this.props.children}  \r\n\r\n        </div>\r\n  \r\n  );\r\n }\r\n}\r\n\r\nexport default Clear;\r\n\r\n \r\n\r\n \r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Input from  './components/Input';\nimport Clear from './components/Clear';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      input:\" \",\n      previousNum:\" \",\n      currentNum:\" \",\n      operator:\" \"\n    };\n  }\n  addToInput= val=>{\n    this.setState({input:this.state.input+val});\n  }\n  addDecimal = val => {\n   if(this.state.input.indexOf(\".\")===-1){\n    this.setState({input: this.state.input +val}) \n   }\n  \n  };\n  clearInput = ()=>{\n    this.setState({input:\" \"});\n  }\n\n  addZeroToInput=val=>{\n    // if this.state.input is not empty then add zero\n    if(this.state.input !==\" \") {\n     this.setState({input: this.state.input+val});\n    }\n   };\n   add = () => {\n     this.state.previousNum=this.state.input;\n     this.setState({input: \" \"});\n     this.state.operator = \"plus\";\n   };\n     subt = () => {\n     this.state.previousNum=this.state.input;\n     this.setState({input: \" \"});\n     this.state.operator = \"subtract\";\n   };\n   multiply = () => {\n     this.state.previousNum=this.state.input;\n     this.setState({input: \" \"});\n     this.state.operator = \"multiply\";\n   };\n   divide = () => {\n     this.state.previousNum=this.state.input;\n     this.setState({input: \" \"});\n     this.state.operator = \"divide\";\n   };\n\n\n   equal = () => {\n   this.state.currentNum=this.state.input;\n   if(this.state.operator==\"plus\"){\n     this.setState({\n       input: parseInt(this.state.previousNum)+ parseInt(this.state.currentNum)\n      });\n    }\n    else if(this.state.operator==\"subtract\"){\n     this.setState({\n       input: parseInt(this.state.previousNum)-parseInt(this.state.currentNum)\n      });\n  }\n   else if(this.state.operator==\"multiply\"){\n     this.setState({\n       input: parseInt(this.state.previousNum)*parseInt(this.state.currentNum)\n      });\n   }\n    else if(this.state.operator==\"divide\"){\n     this.setState({\n       input: parseInt(this.state.previousNum)/parseInt(this.state.currentNum)\n      });\n      \n\n   } }\n\n render() {\n  return ( \n     <div className=\"App\">\n      <div className=\"calc_setup\">\n        <div className=\"row\">\n        <Input>{this.state.input}</Input>\n        </div>\n        <div className=\"row\">\n          <Button handleClick={this.addToInput}>7</Button>\n          <Button handleClick={this.addToInput}>8</Button>\n          <Button handleClick={this.addToInput}>9</Button>\n          <Button handleClick={this.divide}>/</Button>\n        </div>\n        <div className=\"row\"> \n          <Button handleClick={this.addToInput}>4</Button>\n          <Button handleClick={this.addToInput}>5</Button>\n          <Button handleClick={this.addToInput}>6</Button>\n          <Button handleClick={this.multiply}>*</Button>\n      </div>\n      <div className=\"row\">\n          <Button handleClick={this.addToInput}>1</Button>\n          <Button handleClick={this.addToInput}>2</Button>\n          <Button handleClick={this.addToInput}>3</Button>\n          <Button handleClick={this.add}>+</Button>\n    </div>\n    <div className=\"row\">\n          <Button handleClick={this.addDecimal}>.</Button>\n          <Button handleClick={this.addZeroToInput}>0</Button>\n          <Button handleClick={this.equal}>=</Button>\n          <Button handleClick={this.subt}>-</Button>\n       </div> \n       <div className=\"row\">\n        <Clear handleClear={this.clearInput}>Clear</Clear> \n       </div>\n       </div>\n       </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}